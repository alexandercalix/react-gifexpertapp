{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","x","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGift","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGcA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGXC,mBAAS,IAHE,mBAGtCC,EAHsC,KAG1BC,EAH0B,KAmB7C,OACI,sBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAC,OAAIP,GAAJ,mBAAkBO,OACjCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAGlC,OACI,sBAAKC,UAAU,wBAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACnB,4BAAIA,Q,uBCPJK,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACZN,EADY,iDACoCO,UAAUF,GAD9C,+DAECG,MAAMR,GAFP,cAEZS,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAGc,EAAIC,cAAP,aAAG,EAAYC,iBAAiBhB,QARzB,kBAaXY,GAbW,4CAAF,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDb,SAACA,GAAY,IAAD,EAEPrB,mBAAS,CAChC2B,KAAO,GACPO,SAAS,IAJqB,mBAE3BC,EAF2B,KAEpBC,EAFoB,KA2BlC,OApBAC,qBAAU,WAENjB,EAAQC,GACCiB,MAAK,SAAAC,GACEH,EAAS,CACLT,KAAKY,EACLL,SAAQ,SAI9B,CAACb,IAUIc,EDtBuBK,CAAanB,GAA/BU,EAJuB,EAI5BJ,KAAYO,EAJgB,EAIhBA,QAEnB,OACI,qCACA,6BAAKb,IAEHa,GAAW,cAGZ,qBAAKjB,UAAU,aAAf,SAGWc,EAAOF,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEpBpB2B,EAAe,WAAO,IAAD,EAIMzC,mBAAS,CACzC,cAL0B,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAc9B,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ2C,EAAWb,KAAI,SAAArB,GAAC,OACZ,cAAC,EAAD,CAAiBa,SAAUb,GAAbA,YCtBlCmC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c5a8d9df.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport  PropTypes  from 'prop-types';\r\n\r\n export const AddCategory = ({setCategories}) => {\r\n\r\n    //inicializar estado como vacio ''\r\n    const [inputValue, setInputValue]=useState('')\r\n\r\n    const handleInputChange =(e)=>{    \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(x=> [inputValue,...x ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n  \r\n    return (\r\n        <div className=\"card animate__fadeIn \">\r\n            <img src={url} alt={title}/>\r\n             <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGift= async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=nogVRDNYwAh1tIXG8f7jKqdm3SIkEghr`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n  //  console.log(gifs)\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n import { GifGridItem } from './GifGridItem';\r\n// import { getGift } from './../helpers/getGifs';\r\nimport { useFetchGifs } from './../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n \r\n    // const [images, setImages] = useState([]);\r\n    const {data:images,loading} = useFetchGifs(category);\r\n   \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n         {loading && 'Cargando...'} \r\n\r\n\r\n         <div className=\"card-grid \">\r\n          \r\n                {\r\n                    images.map(img=>\r\n                    <GifGridItem \r\n                        key={img.id} \r\n                        {...img}\r\n                    />\r\n                    )\r\n                }\r\n            \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState, useEffect } from 'react';\r\nimport { getGift } from './../helpers/getGifs';\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    \r\n    const [state, setState] =  useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGift(category)\r\n                .then(imgs => {                \r\n                        setState({\r\n                            data:imgs,\r\n                            loading:false\r\n                        })  \r\n            })            \r\n\r\n    },[category])\r\n\r\n    //    //lista de dependencias\r\n    // useEffect(()=>{\r\n    //   getGift(category)\r\n    //   .then(setImages)\r\n    // },[category]);//sin argumentos solo se ejecuta 1 vez\r\n    // //si categoria cambia vuelve a ejecutar el efecto\r\n\r\n\r\n    return state;\r\n\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n\r\n    const [categories, setCategories] = useState([\r\n        'One Punch'\r\n    ])\r\n\r\n    const handleAdd=()=>{\r\n        //setCategories(['One Piece',...categories,])\r\n      //  setCategories(cats => [...cats,'Naruto'] )\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <h2>Gif Expert App</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr />\r\n\r\n      \r\n        \r\n        <ol>\r\n            {\r\n                categories.map(x=> \r\n                    <GifGrid key={x} category={x} />\r\n                )\r\n            }\r\n        </ol>\r\n      </>\r\n    )\r\n  }\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n\n"],"sourceRoot":""}